" PLUGINS

" Adding vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Specify a directory for plugins
call plug#begin('~/.vim/plugged')

Plug 'APZelos/blamer.nvim'
Plug 'editorconfig/editorconfig-vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'haishanh/night-owl.vim', { 'dir': '~/.vim/colors/night-owl.vim' }
Plug 'leafgarland/typescript-vim'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'pangloss/vim-javascript'
Plug 'preservim/nerdtree'
Plug 'ryanoasis/vim-devicons' " must come after nerdtree
Plug 'tpope/vim-surround'

" Initialize plugin system
call plug#end()

" OPTIONS

set encoding=utf-8
set nocompatible
set number
set autoread
" Give more space for displaying messages.
set cmdheight=2
" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300
let g:netrw_banner=0

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
if has("patch-8.1.1564")
	" Recently vim can merge signcolumn and number column into one
	set signcolumn=number
else
	set signcolumn=yes
endif

" SEARCH
set hlsearch
set incsearch
set ignorecase
set smartcase

syntax enable
colorscheme night-owl

" 'night-owl' colorscheme overrides
" Change comment background to default background
hi Comment ctermfg=233 ctermbg=243
hi jsComment ctermfg=233 ctermbg=243
hi javaScriptLineComment ctermfg=233 ctermbg=243
hi shComment ctermfg=233 ctermbg=243
" Give 'TODO' comment keywords greater foreground contrast
hi Todo ctermfg=233 ctermbg=222
hi CocErrorFloat ctermfg=253

" I don't like the forced wrap that `editorconfig-vim` provides,
" so I disable `max_line_length` and use `colorcolumn` instead.
let g:EditorConfig_disable_rules = ['max_line_length']
set colorcolumn=80

" Show hidden files in NERDTree
let NERDTreeShowHidden=1

" blamer
let g:blamer_prefix = '    '
let g:blamer_template = '<committer>, <committer-time> â€¢ <commit-short> <summary>'
let g:blamer_date_format = '%Y-%m-%dT%H:%M:%S'

" coc
let g:coc_global_extensions = ['coc-json']

" REMAPS

" Disable arrow keys in normal mode
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
" Disable arrow keys in insert mode
" inoremap <up> <nop>
" inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
" Disable hl keys in normal mode
" nnoremap k <nop>
" nnoremap j <nop>
nnoremap h <nop>
nnoremap l <nop>
" Map ctrl+p to open fzf
nnoremap <c-p> :FZF!<enter>
" Map ctrl+n to open NerdTree
map <C-n> :NERDTreeToggle<CR>
" Map ctrl+b to toggle BlamerToggle
map <C-b> :BlamerToggle<CR>
" GoTo code navigation.
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"

" FZF

" Customize fzf colors to match your color scheme
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Statement'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

" INSPIRATION
" https://dougblack.io/words/a-good-vimrc.html
" http://vimcasts.org/blog/2013/02/habit-breaking-habit-making/
